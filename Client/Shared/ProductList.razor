@using BlazorCommerceWebApp.Shared
@using System.Net
@inject HttpClient Http

<ul class="list-unstyled">
    @foreach (var product in Products)
    {
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                <a href="#">
                    <img class="media-img" src="@product.ImageUrl" alt="@product.Name"/>
                </a>
            </div>
            <div class="media-body">
                <a href="#">
                    <h4 class="mb-0">@product.Name</h4>
                </a>
                <p>@product.Description</p>
                <h5 class="price">$@product.Price</h5>
            </div>
        </li>
        <hr class="rounded">
    }
</ul>


@code {

    // Create an empty list object named Products
    private static List<Product> Products = new List<Product>();

    // We have to make a HTTP Get call to get the products from the server (aka backend)
    protected override async Task OnInitializedAsync()
    {
        // The GetFromJsonAsync method will convert our product model and the data to JSON and request it from backend asynchronously, we write the data type and the route (aka request uri) and let the magic happen!
        var response = await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/Product");

        // Weird way to say && in if
        if (response is { Data: not null })
            Products = response.Data;
    }

}
    
